<meta charset=UTF-8>

<meta http-equiv="x-ua-compatible" content="ie=edge">

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<iscomment>The page meta data will be replaced by rule based content if it's available</iscomment>
<title><isprint value="${pdict.CurrentPageMetaData.title}" encoding="htmlcontent" /></title>
<meta name="title" content="${pdict.CurrentPageMetaData.title ? pdict.CurrentPageMetaData.title : Resource.msg('global.storename','common',null)}"/>
<meta name="description" content="${pdict.CurrentPageMetaData.description ? pdict.CurrentPageMetaData.description : Resource.msg('global.storename','common',null)}"/>
<meta name="keywords" content="${pdict.CurrentPageMetaData.keywords ? pdict.CurrentPageMetaData.keywords : Resource.msg('global.storename','common',null)}"/>

<iscomment>Additional Rule based page meta tags</iscomment>
<isloop items="${pdict.CurrentPageMetaData.pageMetaTags}" var="pageMetaTag">
    <isif condition="${pageMetaTag.name}">
        <meta name="<isprint value="${pageMetaTag.ID}">" content="<isprint value="${pageMetaTag.content}">">
    <iselseif condition="${pageMetaTag.property}">
        <meta property="<isprint value="${pageMetaTag.ID}">" content="<isprint value="${pageMetaTag.content}">">
    </isif>
</isloop>
<isset name="canonicalLink" value="${pdict.canonicalLink}" scope="page" />
<isset name="preventCanonical" value="${pdict.preventCanonical || false}" scope="page" />

<isif condition="${empty(canonicalLink) && !preventCanonical}">
    <isscript>
        var requestURLParts = request.httpURL.toString().split('/');
        var endpoint        = requestURLParts[requestURLParts.length - 1].split('?')[0];
        canonicalLink       = URLUtils.https(endpoint);
    </isscript>
</isif>

<isif condition="${!empty(canonicalLink)}">
    <link rel="canonical" href="${canonicalLink}" />
</isif>

<link rel="icon" type="image/png" href="${URLUtils.staticURL('/images/favicons/favicon-196x196.png')}" sizes="196x196" />
<link rel="icon" type="image/png" href="${URLUtils.staticURL('/images/favicons/favicon-128x128.png')}" sizes="128x128" />
<link rel="icon" type="image/png" href="${URLUtils.staticURL('/images/favicons/favicon-96x96.png')}" sizes="96x96" />
<link rel="icon" type="image/png" href="${URLUtils.staticURL('/images/favicons/favicon-32x32.png')}" sizes="32x32" />
<link rel="icon" type="image/png" href="${URLUtils.staticURL('/images/favicons/favicon-16x16.png')}" sizes="16x16" />

<link rel="stylesheet" href="${URLUtils.staticURL('/css/global.css')}" />
<isloop items="${ require('*/cartridge/scripts/assets.js').styles }" var="style">
    <link rel="stylesheet" href="${style}" />
</isloop>

<isset name="currentSite" value="${dw.system.Site.current}" scope="page" />

<iscomment>CollectURL will be the url to a collect.JS file from SFMC. This will handle abandoned cart synchronization. For more information: https://help.salesforce.com/articleView?id=mc_ctc_collect_code.htm&type=5</iscomment>
<isset name="collectURL" value="${currentSite.getCustomPreferenceValue("mcDUCollectURL")}" scope="page" />
<isset name="mcMID" value="${currentSite.getCustomPreferenceValue("mcMID")}" scope="page" />
<script src="${collectURL}"></script>
<script>
    _etmc_custom.push(["setOrgId",${mcMID}]);
</script>

<iscomment> Custom CSS file inclusion </iscomment>
<isif condition="${'difarmaCustomCSSFile' in currentSite.preferences.custom && currentSite.getCustomPreferenceValue('difarmaCustomCSSFile') !== null}">
    <link rel="stylesheet" href="${currentSite.getCustomPreferenceValue('difarmaCustomCSSFile').getURL()}"/>
</isif>

<iscomment> End - SmartOrderRefill modification </iscomment>
<isif condition="${'GoogleVerificationTag' in currentSite.preferences.custom && currentSite.preferences.custom.GoogleVerificationTag!=''}">
    <meta name="google-site-verification" content="<isprint value="${currentSite.preferences.custom.GoogleVerificationTag}"/>" />
</isif>

<iscomment>
    hook for Marketing Cloud connector & other integration which need to inject
    logic or markup into the page header
    IMPORTANT: Note that this hook will be called to cached as well as uncached pages
               which means you need to put privacy information into another remote include
</iscomment>
${dw.system.HookMgr.callHook('app.template.htmlHead', 'htmlHead') || ''}
